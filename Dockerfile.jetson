FROM nvcr.io/nvidia/l4t-pytorch:r32.6.1-pth1.8-py3
USER root
WORKDIR /
COPY assets.py model.py utilities.py jetson.py models/ /

RUN apt update && \
    apt install -y && \
    sh -c "echo '/usr/local/cuda/lib64' >> /etc/ld.so.conf.d/nvidia-tegra.conf" && \
    ldconfig && \
    apt-get install build-essential cmake git unzip pkg-config && \
    apt-get install libjpeg-dev libpng-dev libtiff-dev && \
    apt-get install libavcodec-dev libavformat-dev libswscale-dev && \
    apt-get install libgtk2.0-dev libcanberra-gtk* && \
    apt-get install python3-dev python3-numpy python3-pip && \ 
    apt-get install libxvidcore-dev libx264-dev libgtk-3-dev && \
    apt-get install libtbb2 libtbb-dev libdc1394-22-dev && \
    apt-get install libv4l-dev v4l-utils && \
    apt-get install libgstreamer1.0-dev libgstreamer-plugins-base1.0-dev && \
    apt-get install libavresample-dev libvorbis-dev libxine2-dev && \
    apt-get install libfaac-dev libmp3lame-dev libtheora-dev && \
    apt-get install libopencore-amrnb-dev libopencore-amrwb-dev && \
    apt-get install libopenblas-dev libatlas-base-dev libblas-dev && \
    apt-get install liblapack-dev libeigen3-dev gfortran && \
    apt-get install libhdf5-dev protobuf-compiler && \
    apt-get install libprotobuf-dev libgoogle-glog-dev libgflags-dev

RUN wget -O opencv.zip https://github.com/opencv/opencv/archive/4.5.1.zip && \
    wget -O opencv_contrib.zip https://github.com/opencv/opencv_contrib/archive/4.5.1.zip && \
    unzip opencv.zip && \
    unzip opencv_contrib.zip && \
    mv opencv-4.5.1 opencv && \
    mv opencv_contrib-4.5.1 opencv_contrib && \
    rm opencv.zip && \
    rm opencv_contrib.zip && \
    cd /opencv && \
    mkdir build && \
    cd build

RUN cmake -D CMAKE_BUILD_TYPE=RELEASE -D CMAKE_INSTALL_PREFIX=/usr \
    -D OPENCV_EXTRA_MODULES_PATH=/opencv_contrib/modules \
    -D EIGEN_INCLUDE_PATH=/usr/include/eigen3 -D WITH_OPENCL=OFF \
    -D WITH_CUDA=ON -D CUDA_ARCH_BIN=5.3 -D CUDA_ARCH_PTX="" \
    -D WITH_CUDNN=ON -D WITH_CUBLAS=ON -D ENABLE_FAST_MATH=ON \
    -D CUDA_FAST_MATH=ON -D OPENCV_DNN_CUDA=ON -D ENABLE_NEON=ON \
    -D WITH_QT=OFF -D WITH_OPENMP=ON -D WITH_OPENGL=ON -D BUILD_TIFF=ON \
    -D WITH_FFMPEG=ON -D WITH_GSTREAMER=ON -D WITH_TBB=ON -D BUILD_TBB=ON \
    -D BUILD_TESTS=OFF -D WITH_EIGEN=ON -D WITH_V4L=ON -D WITH_LIBV4L=ON \
    -D OPENCV_ENABLE_NONFREE=ON -D INSTALL_C_EXAMPLES=OFF \
    -D INSTALL_PYTHON_EXAMPLES=OFF -D BUILD_NEW_PYTHON_SUPPORT=ON \
    -D BUILD_opencv_python3=TRUE -D OPENCV_GENERATE_PKGCONFIG=ON \
    -D BUILD_EXAMPLES=OFF .. && \
    make -j4

RUN rm -r /usr/include/opencv4/opencv2 && \
    cd /opencv/build && \
    make install && \
    ldconfig && \
    make clean && \
    apt-get update

RUN apt-get install libfreetype6-dev && \
    pip3 install -r nanocamera

CMD ["python3", "jetson.py"]
